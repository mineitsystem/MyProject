<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/util 
		http://www.springframework.org/schema/util/spring-util-3.1.xsd">
 
<http pattern="/css/**" security="none" />
<http pattern="/js/**" security="none" />
<http pattern="/images/**" security="none" />
<http pattern="/vendor/**" security="none" />
<http pattern="/resources/**" security="none" />

<http auto-config="true" use-expressions="true">
	<intercept-url pattern="/main/**" access="permitAll" />
	<intercept-url pattern="/community/**" access="permitAll" />
	<intercept-url pattern="/example/**" access="permitAll" />	
	<intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />
	<intercept-url pattern="/user/**" access="hasRole('ROLE_USER')" />						
	<form-login 
		login-page="/login/login"		
	    login-processing-url="/j_spring_security_check"	     	
		username-parameter="id" 
		password-parameter="password"		
		authentication-success-handler-ref="userLoginSuccessHandler"
		authentication-failure-handler-ref="userLoginFailureHandler"/>				
	 <access-denied-handler ref="userLoginDiniedHandler"/>	
	 <logout delete-cookies="true" logout-success-url="/main/main" logout-url="/login/logout" invalidate-session="true" /> 
	 
	 <session-management invalid-session-url="/login/login">
	  <concurrency-control max-sessions="1" expired-url="/login/login"/>
	 </session-management> 
</http>

<!-- 
<jdbc-user-service data-source-ref="dataSourceSpied"
users-by-username-query="SELECT USER_ID AS username, PASS AS password, ENABLED AS enabled
	FROM TB_USER WHERE USER_ID=?"
authorities-by-username-query="SELECT USER_ID AS username, AUTHORITY AS authority
	FROM TB_USER WHERE USER_ID=?" /> 
-->



<authentication-manager>
	<authentication-provider user-service-ref="userService">
			<password-encoder ref="passwordEncoder">
				<salt-source user-property="email"/>
			</password-encoder>
		</authentication-provider>
</authentication-manager>

<beans:bean id="userLoginSuccessHandler"
  class="first.common.util.UserLoginSuccessHandler"></beans:bean>
<beans:bean id="userLoginFailureHandler"
  class="first.common.util.UserLoginFailureHandler"></beans:bean>  
<beans:bean id="userLoginDiniedHandler"
  class="first.common.util.UserDeniedHandler"></beans:bean>  


<beans:bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
  <beans:constructor-arg name="strength" value="256"></beans:constructor-arg>
</beans:bean> 


<beans:bean id="userService" class="first.common.service.UserAuthenticationService">		
</beans:bean>		

</beans:beans> 

